// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emrsystem.proxies;

public class Diagnosis
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject diagnosisMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EMRSystem.Diagnosis";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PatientIC("PatientIC"),
		DateOfDiagnosis("DateOfDiagnosis"),
		DiagnosisHCPName("DiagnosisHCPName"),
		DiagnosisDescription("DiagnosisDescription"),
		PlaceOfDiagnosis("PlaceOfDiagnosis"),
		FlowingInvestigation("FlowingInvestigation"),
		ReferToHCP("ReferToHCP"),
		Diagnosis_Patient("EMRSystem.Diagnosis_Patient");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Diagnosis(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EMRSystem.Diagnosis"));
	}

	protected Diagnosis(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject diagnosisMendixObject)
	{
		if (diagnosisMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EMRSystem.Diagnosis", diagnosisMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EMRSystem.Diagnosis");

		this.diagnosisMendixObject = diagnosisMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Diagnosis.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emrsystem.proxies.Diagnosis initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emrsystem.proxies.Diagnosis.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emrsystem.proxies.Diagnosis initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emrsystem.proxies.Diagnosis(context, mendixObject);
	}

	public static emrsystem.proxies.Diagnosis load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emrsystem.proxies.Diagnosis.initialize(context, mendixObject);
	}

	public static java.util.List<emrsystem.proxies.Diagnosis> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emrsystem.proxies.Diagnosis> result = new java.util.ArrayList<emrsystem.proxies.Diagnosis>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EMRSystem.Diagnosis" + xpathConstraint))
			result.add(emrsystem.proxies.Diagnosis.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC()
	{
		return getPatientIC(getContext());
	}

	/**
	 * @param context
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PatientIC.toString());
	}

	/**
	 * Set value of PatientIC
	 * @param patientic
	 */
	public final void setPatientIC(java.lang.String patientic)
	{
		setPatientIC(getContext(), patientic);
	}

	/**
	 * Set value of PatientIC
	 * @param context
	 * @param patientic
	 */
	public final void setPatientIC(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String patientic)
	{
		getMendixObject().setValue(context, MemberNames.PatientIC.toString(), patientic);
	}

	/**
	 * @return value of DateOfDiagnosis
	 */
	public final java.util.Date getDateOfDiagnosis()
	{
		return getDateOfDiagnosis(getContext());
	}

	/**
	 * @param context
	 * @return value of DateOfDiagnosis
	 */
	public final java.util.Date getDateOfDiagnosis(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateOfDiagnosis.toString());
	}

	/**
	 * Set value of DateOfDiagnosis
	 * @param dateofdiagnosis
	 */
	public final void setDateOfDiagnosis(java.util.Date dateofdiagnosis)
	{
		setDateOfDiagnosis(getContext(), dateofdiagnosis);
	}

	/**
	 * Set value of DateOfDiagnosis
	 * @param context
	 * @param dateofdiagnosis
	 */
	public final void setDateOfDiagnosis(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date dateofdiagnosis)
	{
		getMendixObject().setValue(context, MemberNames.DateOfDiagnosis.toString(), dateofdiagnosis);
	}

	/**
	 * @return value of DiagnosisHCPName
	 */
	public final java.lang.String getDiagnosisHCPName()
	{
		return getDiagnosisHCPName(getContext());
	}

	/**
	 * @param context
	 * @return value of DiagnosisHCPName
	 */
	public final java.lang.String getDiagnosisHCPName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DiagnosisHCPName.toString());
	}

	/**
	 * Set value of DiagnosisHCPName
	 * @param diagnosishcpname
	 */
	public final void setDiagnosisHCPName(java.lang.String diagnosishcpname)
	{
		setDiagnosisHCPName(getContext(), diagnosishcpname);
	}

	/**
	 * Set value of DiagnosisHCPName
	 * @param context
	 * @param diagnosishcpname
	 */
	public final void setDiagnosisHCPName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String diagnosishcpname)
	{
		getMendixObject().setValue(context, MemberNames.DiagnosisHCPName.toString(), diagnosishcpname);
	}

	/**
	 * @return value of DiagnosisDescription
	 */
	public final java.lang.String getDiagnosisDescription()
	{
		return getDiagnosisDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of DiagnosisDescription
	 */
	public final java.lang.String getDiagnosisDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DiagnosisDescription.toString());
	}

	/**
	 * Set value of DiagnosisDescription
	 * @param diagnosisdescription
	 */
	public final void setDiagnosisDescription(java.lang.String diagnosisdescription)
	{
		setDiagnosisDescription(getContext(), diagnosisdescription);
	}

	/**
	 * Set value of DiagnosisDescription
	 * @param context
	 * @param diagnosisdescription
	 */
	public final void setDiagnosisDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String diagnosisdescription)
	{
		getMendixObject().setValue(context, MemberNames.DiagnosisDescription.toString(), diagnosisdescription);
	}

	/**
	 * @return value of PlaceOfDiagnosis
	 */
	public final java.lang.String getPlaceOfDiagnosis()
	{
		return getPlaceOfDiagnosis(getContext());
	}

	/**
	 * @param context
	 * @return value of PlaceOfDiagnosis
	 */
	public final java.lang.String getPlaceOfDiagnosis(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PlaceOfDiagnosis.toString());
	}

	/**
	 * Set value of PlaceOfDiagnosis
	 * @param placeofdiagnosis
	 */
	public final void setPlaceOfDiagnosis(java.lang.String placeofdiagnosis)
	{
		setPlaceOfDiagnosis(getContext(), placeofdiagnosis);
	}

	/**
	 * Set value of PlaceOfDiagnosis
	 * @param context
	 * @param placeofdiagnosis
	 */
	public final void setPlaceOfDiagnosis(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String placeofdiagnosis)
	{
		getMendixObject().setValue(context, MemberNames.PlaceOfDiagnosis.toString(), placeofdiagnosis);
	}

	/**
	 * @return value of FlowingInvestigation
	 */
	public final java.lang.Boolean getFlowingInvestigation()
	{
		return getFlowingInvestigation(getContext());
	}

	/**
	 * @param context
	 * @return value of FlowingInvestigation
	 */
	public final java.lang.Boolean getFlowingInvestigation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.FlowingInvestigation.toString());
	}

	/**
	 * Set value of FlowingInvestigation
	 * @param flowinginvestigation
	 */
	public final void setFlowingInvestigation(java.lang.Boolean flowinginvestigation)
	{
		setFlowingInvestigation(getContext(), flowinginvestigation);
	}

	/**
	 * Set value of FlowingInvestigation
	 * @param context
	 * @param flowinginvestigation
	 */
	public final void setFlowingInvestigation(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean flowinginvestigation)
	{
		getMendixObject().setValue(context, MemberNames.FlowingInvestigation.toString(), flowinginvestigation);
	}

	/**
	 * @return value of ReferToHCP
	 */
	public final java.lang.String getReferToHCP()
	{
		return getReferToHCP(getContext());
	}

	/**
	 * @param context
	 * @return value of ReferToHCP
	 */
	public final java.lang.String getReferToHCP(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ReferToHCP.toString());
	}

	/**
	 * Set value of ReferToHCP
	 * @param refertohcp
	 */
	public final void setReferToHCP(java.lang.String refertohcp)
	{
		setReferToHCP(getContext(), refertohcp);
	}

	/**
	 * Set value of ReferToHCP
	 * @param context
	 * @param refertohcp
	 */
	public final void setReferToHCP(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String refertohcp)
	{
		getMendixObject().setValue(context, MemberNames.ReferToHCP.toString(), refertohcp);
	}

	/**
	 * @return value of Diagnosis_Patient
	 */
	public final emrsystem.proxies.PatientDetails getDiagnosis_Patient() throws com.mendix.core.CoreException
	{
		return getDiagnosis_Patient(getContext());
	}

	/**
	 * @param context
	 * @return value of Diagnosis_Patient
	 */
	public final emrsystem.proxies.PatientDetails getDiagnosis_Patient(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.PatientDetails result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Diagnosis_Patient.toString());
		if (identifier != null)
			result = emrsystem.proxies.PatientDetails.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Diagnosis_Patient
	 * @param diagnosis_patient
	 */
	public final void setDiagnosis_Patient(emrsystem.proxies.PatientDetails diagnosis_patient)
	{
		setDiagnosis_Patient(getContext(), diagnosis_patient);
	}

	/**
	 * Set value of Diagnosis_Patient
	 * @param context
	 * @param diagnosis_patient
	 */
	public final void setDiagnosis_Patient(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.PatientDetails diagnosis_patient)
	{
		if (diagnosis_patient == null)
			getMendixObject().setValue(context, MemberNames.Diagnosis_Patient.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Diagnosis_Patient.toString(), diagnosis_patient.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return diagnosisMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emrsystem.proxies.Diagnosis that = (emrsystem.proxies.Diagnosis) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EMRSystem.Diagnosis";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
