// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emrsystem.proxies;

public class Event
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject eventMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EMRSystem.Event";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ProblemID("ProblemID"),
		ProblemDescription("ProblemDescription"),
		SeverityLevel("SeverityLevel"),
		Event_CurrentProblem("EMRSystem.Event_CurrentProblem");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Event(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EMRSystem.Event"));
	}

	protected Event(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject eventMendixObject)
	{
		if (eventMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EMRSystem.Event", eventMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EMRSystem.Event");

		this.eventMendixObject = eventMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Event.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emrsystem.proxies.Event initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emrsystem.proxies.Event.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emrsystem.proxies.Event initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emrsystem.proxies.Event(context, mendixObject);
	}

	public static emrsystem.proxies.Event load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emrsystem.proxies.Event.initialize(context, mendixObject);
	}

	public static java.util.List<emrsystem.proxies.Event> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emrsystem.proxies.Event> result = new java.util.ArrayList<emrsystem.proxies.Event>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EMRSystem.Event" + xpathConstraint))
			result.add(emrsystem.proxies.Event.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ProblemID
	 */
	public final java.lang.String getProblemID()
	{
		return getProblemID(getContext());
	}

	/**
	 * @param context
	 * @return value of ProblemID
	 */
	public final java.lang.String getProblemID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ProblemID.toString());
	}

	/**
	 * Set value of ProblemID
	 * @param problemid
	 */
	public final void setProblemID(java.lang.String problemid)
	{
		setProblemID(getContext(), problemid);
	}

	/**
	 * Set value of ProblemID
	 * @param context
	 * @param problemid
	 */
	public final void setProblemID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String problemid)
	{
		getMendixObject().setValue(context, MemberNames.ProblemID.toString(), problemid);
	}

	/**
	 * @return value of ProblemDescription
	 */
	public final java.lang.String getProblemDescription()
	{
		return getProblemDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of ProblemDescription
	 */
	public final java.lang.String getProblemDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ProblemDescription.toString());
	}

	/**
	 * Set value of ProblemDescription
	 * @param problemdescription
	 */
	public final void setProblemDescription(java.lang.String problemdescription)
	{
		setProblemDescription(getContext(), problemdescription);
	}

	/**
	 * Set value of ProblemDescription
	 * @param context
	 * @param problemdescription
	 */
	public final void setProblemDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String problemdescription)
	{
		getMendixObject().setValue(context, MemberNames.ProblemDescription.toString(), problemdescription);
	}

	/**
	 * @return value of SeverityLevel
	 */
	public final java.lang.String getSeverityLevel()
	{
		return getSeverityLevel(getContext());
	}

	/**
	 * @param context
	 * @return value of SeverityLevel
	 */
	public final java.lang.String getSeverityLevel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SeverityLevel.toString());
	}

	/**
	 * Set value of SeverityLevel
	 * @param severitylevel
	 */
	public final void setSeverityLevel(java.lang.String severitylevel)
	{
		setSeverityLevel(getContext(), severitylevel);
	}

	/**
	 * Set value of SeverityLevel
	 * @param context
	 * @param severitylevel
	 */
	public final void setSeverityLevel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String severitylevel)
	{
		getMendixObject().setValue(context, MemberNames.SeverityLevel.toString(), severitylevel);
	}

	/**
	 * @return value of Event_CurrentProblem
	 */
	public final emrsystem.proxies.CurrentProblems getEvent_CurrentProblem() throws com.mendix.core.CoreException
	{
		return getEvent_CurrentProblem(getContext());
	}

	/**
	 * @param context
	 * @return value of Event_CurrentProblem
	 */
	public final emrsystem.proxies.CurrentProblems getEvent_CurrentProblem(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.CurrentProblems result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Event_CurrentProblem.toString());
		if (identifier != null)
			result = emrsystem.proxies.CurrentProblems.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Event_CurrentProblem
	 * @param event_currentproblem
	 */
	public final void setEvent_CurrentProblem(emrsystem.proxies.CurrentProblems event_currentproblem)
	{
		setEvent_CurrentProblem(getContext(), event_currentproblem);
	}

	/**
	 * Set value of Event_CurrentProblem
	 * @param context
	 * @param event_currentproblem
	 */
	public final void setEvent_CurrentProblem(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.CurrentProblems event_currentproblem)
	{
		if (event_currentproblem == null)
			getMendixObject().setValue(context, MemberNames.Event_CurrentProblem.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Event_CurrentProblem.toString(), event_currentproblem.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return eventMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emrsystem.proxies.Event that = (emrsystem.proxies.Event) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EMRSystem.Event";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
