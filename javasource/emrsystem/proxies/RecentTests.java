// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emrsystem.proxies;

public class RecentTests
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject recentTestsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EMRSystem.RecentTests";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PatientIC("PatientIC"),
		TestID("TestID"),
		DateOfInvestigation("DateOfInvestigation"),
		TypeOfInvestigation("TypeOfInvestigation"),
		Result("Result"),
		Range("Range"),
		Investigation_Patient("EMRSystem.Investigation_Patient"),
		Biochemistry_Investigation("EMRSystem.Biochemistry_Investigation");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RecentTests(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EMRSystem.RecentTests"));
	}

	protected RecentTests(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject recentTestsMendixObject)
	{
		if (recentTestsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EMRSystem.RecentTests", recentTestsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EMRSystem.RecentTests");

		this.recentTestsMendixObject = recentTestsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'RecentTests.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emrsystem.proxies.RecentTests initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emrsystem.proxies.RecentTests.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emrsystem.proxies.RecentTests initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emrsystem.proxies.RecentTests(context, mendixObject);
	}

	public static emrsystem.proxies.RecentTests load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emrsystem.proxies.RecentTests.initialize(context, mendixObject);
	}

	public static java.util.List<emrsystem.proxies.RecentTests> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emrsystem.proxies.RecentTests> result = new java.util.ArrayList<emrsystem.proxies.RecentTests>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EMRSystem.RecentTests" + xpathConstraint))
			result.add(emrsystem.proxies.RecentTests.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC()
	{
		return getPatientIC(getContext());
	}

	/**
	 * @param context
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PatientIC.toString());
	}

	/**
	 * Set value of PatientIC
	 * @param patientic
	 */
	public final void setPatientIC(java.lang.String patientic)
	{
		setPatientIC(getContext(), patientic);
	}

	/**
	 * Set value of PatientIC
	 * @param context
	 * @param patientic
	 */
	public final void setPatientIC(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String patientic)
	{
		getMendixObject().setValue(context, MemberNames.PatientIC.toString(), patientic);
	}

	/**
	 * @return value of TestID
	 */
	public final java.lang.String getTestID()
	{
		return getTestID(getContext());
	}

	/**
	 * @param context
	 * @return value of TestID
	 */
	public final java.lang.String getTestID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TestID.toString());
	}

	/**
	 * Set value of TestID
	 * @param testid
	 */
	public final void setTestID(java.lang.String testid)
	{
		setTestID(getContext(), testid);
	}

	/**
	 * Set value of TestID
	 * @param context
	 * @param testid
	 */
	public final void setTestID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String testid)
	{
		getMendixObject().setValue(context, MemberNames.TestID.toString(), testid);
	}

	/**
	 * @return value of DateOfInvestigation
	 */
	public final java.util.Date getDateOfInvestigation()
	{
		return getDateOfInvestigation(getContext());
	}

	/**
	 * @param context
	 * @return value of DateOfInvestigation
	 */
	public final java.util.Date getDateOfInvestigation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateOfInvestigation.toString());
	}

	/**
	 * Set value of DateOfInvestigation
	 * @param dateofinvestigation
	 */
	public final void setDateOfInvestigation(java.util.Date dateofinvestigation)
	{
		setDateOfInvestigation(getContext(), dateofinvestigation);
	}

	/**
	 * Set value of DateOfInvestigation
	 * @param context
	 * @param dateofinvestigation
	 */
	public final void setDateOfInvestigation(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date dateofinvestigation)
	{
		getMendixObject().setValue(context, MemberNames.DateOfInvestigation.toString(), dateofinvestigation);
	}

	/**
	 * @return value of TypeOfInvestigation
	 */
	public final java.lang.String getTypeOfInvestigation()
	{
		return getTypeOfInvestigation(getContext());
	}

	/**
	 * @param context
	 * @return value of TypeOfInvestigation
	 */
	public final java.lang.String getTypeOfInvestigation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TypeOfInvestigation.toString());
	}

	/**
	 * Set value of TypeOfInvestigation
	 * @param typeofinvestigation
	 */
	public final void setTypeOfInvestigation(java.lang.String typeofinvestigation)
	{
		setTypeOfInvestigation(getContext(), typeofinvestigation);
	}

	/**
	 * Set value of TypeOfInvestigation
	 * @param context
	 * @param typeofinvestigation
	 */
	public final void setTypeOfInvestigation(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String typeofinvestigation)
	{
		getMendixObject().setValue(context, MemberNames.TypeOfInvestigation.toString(), typeofinvestigation);
	}

	/**
	 * @return value of Result
	 */
	public final java.lang.String getResult()
	{
		return getResult(getContext());
	}

	/**
	 * @param context
	 * @return value of Result
	 */
	public final java.lang.String getResult(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Result.toString());
	}

	/**
	 * Set value of Result
	 * @param result
	 */
	public final void setResult(java.lang.String result)
	{
		setResult(getContext(), result);
	}

	/**
	 * Set value of Result
	 * @param context
	 * @param result
	 */
	public final void setResult(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String result)
	{
		getMendixObject().setValue(context, MemberNames.Result.toString(), result);
	}

	/**
	 * @return value of Range
	 */
	public final java.lang.String getRange()
	{
		return getRange(getContext());
	}

	/**
	 * @param context
	 * @return value of Range
	 */
	public final java.lang.String getRange(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Range.toString());
	}

	/**
	 * Set value of Range
	 * @param range
	 */
	public final void setRange(java.lang.String range)
	{
		setRange(getContext(), range);
	}

	/**
	 * Set value of Range
	 * @param context
	 * @param range
	 */
	public final void setRange(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String range)
	{
		getMendixObject().setValue(context, MemberNames.Range.toString(), range);
	}

	/**
	 * @return value of Investigation_Patient
	 */
	public final emrsystem.proxies.PatientDetails getInvestigation_Patient() throws com.mendix.core.CoreException
	{
		return getInvestigation_Patient(getContext());
	}

	/**
	 * @param context
	 * @return value of Investigation_Patient
	 */
	public final emrsystem.proxies.PatientDetails getInvestigation_Patient(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.PatientDetails result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Investigation_Patient.toString());
		if (identifier != null)
			result = emrsystem.proxies.PatientDetails.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Investigation_Patient
	 * @param investigation_patient
	 */
	public final void setInvestigation_Patient(emrsystem.proxies.PatientDetails investigation_patient)
	{
		setInvestigation_Patient(getContext(), investigation_patient);
	}

	/**
	 * Set value of Investigation_Patient
	 * @param context
	 * @param investigation_patient
	 */
	public final void setInvestigation_Patient(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.PatientDetails investigation_patient)
	{
		if (investigation_patient == null)
			getMendixObject().setValue(context, MemberNames.Investigation_Patient.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Investigation_Patient.toString(), investigation_patient.getMendixObject().getId());
	}

	/**
	 * @return value of Biochemistry_Investigation
	 */
	public final emrsystem.proxies.Biochemistry getBiochemistry_Investigation() throws com.mendix.core.CoreException
	{
		return getBiochemistry_Investigation(getContext());
	}

	/**
	 * @param context
	 * @return value of Biochemistry_Investigation
	 */
	public final emrsystem.proxies.Biochemistry getBiochemistry_Investigation(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.Biochemistry result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Biochemistry_Investigation.toString());
		if (identifier != null)
			result = emrsystem.proxies.Biochemistry.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Biochemistry_Investigation
	 * @param biochemistry_investigation
	 */
	public final void setBiochemistry_Investigation(emrsystem.proxies.Biochemistry biochemistry_investigation)
	{
		setBiochemistry_Investigation(getContext(), biochemistry_investigation);
	}

	/**
	 * Set value of Biochemistry_Investigation
	 * @param context
	 * @param biochemistry_investigation
	 */
	public final void setBiochemistry_Investigation(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.Biochemistry biochemistry_investigation)
	{
		if (biochemistry_investigation == null)
			getMendixObject().setValue(context, MemberNames.Biochemistry_Investigation.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Biochemistry_Investigation.toString(), biochemistry_investigation.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return recentTestsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emrsystem.proxies.RecentTests that = (emrsystem.proxies.RecentTests) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EMRSystem.RecentTests";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
