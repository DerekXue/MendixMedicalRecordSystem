// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emrsystem.proxies;

public class CurrentProblems
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject currentProblemsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EMRSystem.CurrentProblems";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PatientIC("PatientIC"),
		ProblemID("ProblemID"),
		ProblemRecordedDate("ProblemRecordedDate"),
		ProblemName("ProblemName"),
		MedicalProblems_Patient("EMRSystem.MedicalProblems_Patient"),
		Event_CurrentProblem("EMRSystem.Event_CurrentProblem");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CurrentProblems(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EMRSystem.CurrentProblems"));
	}

	protected CurrentProblems(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject currentProblemsMendixObject)
	{
		if (currentProblemsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EMRSystem.CurrentProblems", currentProblemsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EMRSystem.CurrentProblems");

		this.currentProblemsMendixObject = currentProblemsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'CurrentProblems.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emrsystem.proxies.CurrentProblems initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emrsystem.proxies.CurrentProblems.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emrsystem.proxies.CurrentProblems initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emrsystem.proxies.CurrentProblems(context, mendixObject);
	}

	public static emrsystem.proxies.CurrentProblems load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emrsystem.proxies.CurrentProblems.initialize(context, mendixObject);
	}

	public static java.util.List<emrsystem.proxies.CurrentProblems> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emrsystem.proxies.CurrentProblems> result = new java.util.ArrayList<emrsystem.proxies.CurrentProblems>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EMRSystem.CurrentProblems" + xpathConstraint))
			result.add(emrsystem.proxies.CurrentProblems.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC()
	{
		return getPatientIC(getContext());
	}

	/**
	 * @param context
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PatientIC.toString());
	}

	/**
	 * Set value of PatientIC
	 * @param patientic
	 */
	public final void setPatientIC(java.lang.String patientic)
	{
		setPatientIC(getContext(), patientic);
	}

	/**
	 * Set value of PatientIC
	 * @param context
	 * @param patientic
	 */
	public final void setPatientIC(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String patientic)
	{
		getMendixObject().setValue(context, MemberNames.PatientIC.toString(), patientic);
	}

	/**
	 * @return value of ProblemID
	 */
	public final java.lang.String getProblemID()
	{
		return getProblemID(getContext());
	}

	/**
	 * @param context
	 * @return value of ProblemID
	 */
	public final java.lang.String getProblemID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ProblemID.toString());
	}

	/**
	 * Set value of ProblemID
	 * @param problemid
	 */
	public final void setProblemID(java.lang.String problemid)
	{
		setProblemID(getContext(), problemid);
	}

	/**
	 * Set value of ProblemID
	 * @param context
	 * @param problemid
	 */
	public final void setProblemID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String problemid)
	{
		getMendixObject().setValue(context, MemberNames.ProblemID.toString(), problemid);
	}

	/**
	 * @return value of ProblemRecordedDate
	 */
	public final java.util.Date getProblemRecordedDate()
	{
		return getProblemRecordedDate(getContext());
	}

	/**
	 * @param context
	 * @return value of ProblemRecordedDate
	 */
	public final java.util.Date getProblemRecordedDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.ProblemRecordedDate.toString());
	}

	/**
	 * Set value of ProblemRecordedDate
	 * @param problemrecordeddate
	 */
	public final void setProblemRecordedDate(java.util.Date problemrecordeddate)
	{
		setProblemRecordedDate(getContext(), problemrecordeddate);
	}

	/**
	 * Set value of ProblemRecordedDate
	 * @param context
	 * @param problemrecordeddate
	 */
	public final void setProblemRecordedDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date problemrecordeddate)
	{
		getMendixObject().setValue(context, MemberNames.ProblemRecordedDate.toString(), problemrecordeddate);
	}

	/**
	 * @return value of ProblemName
	 */
	public final java.lang.String getProblemName()
	{
		return getProblemName(getContext());
	}

	/**
	 * @param context
	 * @return value of ProblemName
	 */
	public final java.lang.String getProblemName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ProblemName.toString());
	}

	/**
	 * Set value of ProblemName
	 * @param problemname
	 */
	public final void setProblemName(java.lang.String problemname)
	{
		setProblemName(getContext(), problemname);
	}

	/**
	 * Set value of ProblemName
	 * @param context
	 * @param problemname
	 */
	public final void setProblemName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String problemname)
	{
		getMendixObject().setValue(context, MemberNames.ProblemName.toString(), problemname);
	}

	/**
	 * @return value of MedicalProblems_Patient
	 */
	public final emrsystem.proxies.PatientDetails getMedicalProblems_Patient() throws com.mendix.core.CoreException
	{
		return getMedicalProblems_Patient(getContext());
	}

	/**
	 * @param context
	 * @return value of MedicalProblems_Patient
	 */
	public final emrsystem.proxies.PatientDetails getMedicalProblems_Patient(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.PatientDetails result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MedicalProblems_Patient.toString());
		if (identifier != null)
			result = emrsystem.proxies.PatientDetails.load(context, identifier);
		return result;
	}

	/**
	 * Set value of MedicalProblems_Patient
	 * @param medicalproblems_patient
	 */
	public final void setMedicalProblems_Patient(emrsystem.proxies.PatientDetails medicalproblems_patient)
	{
		setMedicalProblems_Patient(getContext(), medicalproblems_patient);
	}

	/**
	 * Set value of MedicalProblems_Patient
	 * @param context
	 * @param medicalproblems_patient
	 */
	public final void setMedicalProblems_Patient(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.PatientDetails medicalproblems_patient)
	{
		if (medicalproblems_patient == null)
			getMendixObject().setValue(context, MemberNames.MedicalProblems_Patient.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.MedicalProblems_Patient.toString(), medicalproblems_patient.getMendixObject().getId());
	}

	/**
	 * @return value of Event_CurrentProblem
	 */
	public final emrsystem.proxies.Event getEvent_CurrentProblem() throws com.mendix.core.CoreException
	{
		return getEvent_CurrentProblem(getContext());
	}

	/**
	 * @param context
	 * @return value of Event_CurrentProblem
	 */
	public final emrsystem.proxies.Event getEvent_CurrentProblem(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.Event result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Event_CurrentProblem.toString());
		if (identifier != null)
			result = emrsystem.proxies.Event.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Event_CurrentProblem
	 * @param event_currentproblem
	 */
	public final void setEvent_CurrentProblem(emrsystem.proxies.Event event_currentproblem)
	{
		setEvent_CurrentProblem(getContext(), event_currentproblem);
	}

	/**
	 * Set value of Event_CurrentProblem
	 * @param context
	 * @param event_currentproblem
	 */
	public final void setEvent_CurrentProblem(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.Event event_currentproblem)
	{
		if (event_currentproblem == null)
			getMendixObject().setValue(context, MemberNames.Event_CurrentProblem.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Event_CurrentProblem.toString(), event_currentproblem.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return currentProblemsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emrsystem.proxies.CurrentProblems that = (emrsystem.proxies.CurrentProblems) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EMRSystem.CurrentProblems";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
