// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emrsystem.proxies;

public class AllergiesAndAdverseReactions
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject allergiesAndAdverseReactionsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EMRSystem.AllergiesAndAdverseReactions";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PatientIC("PatientIC"),
		DateRecorded("DateRecorded"),
		AllergiesAndAdverseReactionsDescription("AllergiesAndAdverseReactionsDescription"),
		AllergiesAndAdverseReactions_Patient("EMRSystem.AllergiesAndAdverseReactions_Patient");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AllergiesAndAdverseReactions(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EMRSystem.AllergiesAndAdverseReactions"));
	}

	protected AllergiesAndAdverseReactions(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject allergiesAndAdverseReactionsMendixObject)
	{
		if (allergiesAndAdverseReactionsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EMRSystem.AllergiesAndAdverseReactions", allergiesAndAdverseReactionsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EMRSystem.AllergiesAndAdverseReactions");

		this.allergiesAndAdverseReactionsMendixObject = allergiesAndAdverseReactionsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'AllergiesAndAdverseReactions.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emrsystem.proxies.AllergiesAndAdverseReactions initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emrsystem.proxies.AllergiesAndAdverseReactions.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emrsystem.proxies.AllergiesAndAdverseReactions initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emrsystem.proxies.AllergiesAndAdverseReactions(context, mendixObject);
	}

	public static emrsystem.proxies.AllergiesAndAdverseReactions load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emrsystem.proxies.AllergiesAndAdverseReactions.initialize(context, mendixObject);
	}

	public static java.util.List<emrsystem.proxies.AllergiesAndAdverseReactions> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emrsystem.proxies.AllergiesAndAdverseReactions> result = new java.util.ArrayList<emrsystem.proxies.AllergiesAndAdverseReactions>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EMRSystem.AllergiesAndAdverseReactions" + xpathConstraint))
			result.add(emrsystem.proxies.AllergiesAndAdverseReactions.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC()
	{
		return getPatientIC(getContext());
	}

	/**
	 * @param context
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PatientIC.toString());
	}

	/**
	 * Set value of PatientIC
	 * @param patientic
	 */
	public final void setPatientIC(java.lang.String patientic)
	{
		setPatientIC(getContext(), patientic);
	}

	/**
	 * Set value of PatientIC
	 * @param context
	 * @param patientic
	 */
	public final void setPatientIC(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String patientic)
	{
		getMendixObject().setValue(context, MemberNames.PatientIC.toString(), patientic);
	}

	/**
	 * @return value of DateRecorded
	 */
	public final java.util.Date getDateRecorded()
	{
		return getDateRecorded(getContext());
	}

	/**
	 * @param context
	 * @return value of DateRecorded
	 */
	public final java.util.Date getDateRecorded(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateRecorded.toString());
	}

	/**
	 * Set value of DateRecorded
	 * @param daterecorded
	 */
	public final void setDateRecorded(java.util.Date daterecorded)
	{
		setDateRecorded(getContext(), daterecorded);
	}

	/**
	 * Set value of DateRecorded
	 * @param context
	 * @param daterecorded
	 */
	public final void setDateRecorded(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date daterecorded)
	{
		getMendixObject().setValue(context, MemberNames.DateRecorded.toString(), daterecorded);
	}

	/**
	 * @return value of AllergiesAndAdverseReactionsDescription
	 */
	public final java.lang.String getAllergiesAndAdverseReactionsDescription()
	{
		return getAllergiesAndAdverseReactionsDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of AllergiesAndAdverseReactionsDescription
	 */
	public final java.lang.String getAllergiesAndAdverseReactionsDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.AllergiesAndAdverseReactionsDescription.toString());
	}

	/**
	 * Set value of AllergiesAndAdverseReactionsDescription
	 * @param allergiesandadversereactionsdescription
	 */
	public final void setAllergiesAndAdverseReactionsDescription(java.lang.String allergiesandadversereactionsdescription)
	{
		setAllergiesAndAdverseReactionsDescription(getContext(), allergiesandadversereactionsdescription);
	}

	/**
	 * Set value of AllergiesAndAdverseReactionsDescription
	 * @param context
	 * @param allergiesandadversereactionsdescription
	 */
	public final void setAllergiesAndAdverseReactionsDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String allergiesandadversereactionsdescription)
	{
		getMendixObject().setValue(context, MemberNames.AllergiesAndAdverseReactionsDescription.toString(), allergiesandadversereactionsdescription);
	}

	/**
	 * @return value of AllergiesAndAdverseReactions_Patient
	 */
	public final emrsystem.proxies.PatientDetails getAllergiesAndAdverseReactions_Patient() throws com.mendix.core.CoreException
	{
		return getAllergiesAndAdverseReactions_Patient(getContext());
	}

	/**
	 * @param context
	 * @return value of AllergiesAndAdverseReactions_Patient
	 */
	public final emrsystem.proxies.PatientDetails getAllergiesAndAdverseReactions_Patient(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.PatientDetails result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AllergiesAndAdverseReactions_Patient.toString());
		if (identifier != null)
			result = emrsystem.proxies.PatientDetails.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AllergiesAndAdverseReactions_Patient
	 * @param allergiesandadversereactions_patient
	 */
	public final void setAllergiesAndAdverseReactions_Patient(emrsystem.proxies.PatientDetails allergiesandadversereactions_patient)
	{
		setAllergiesAndAdverseReactions_Patient(getContext(), allergiesandadversereactions_patient);
	}

	/**
	 * Set value of AllergiesAndAdverseReactions_Patient
	 * @param context
	 * @param allergiesandadversereactions_patient
	 */
	public final void setAllergiesAndAdverseReactions_Patient(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.PatientDetails allergiesandadversereactions_patient)
	{
		if (allergiesandadversereactions_patient == null)
			getMendixObject().setValue(context, MemberNames.AllergiesAndAdverseReactions_Patient.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AllergiesAndAdverseReactions_Patient.toString(), allergiesandadversereactions_patient.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return allergiesAndAdverseReactionsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emrsystem.proxies.AllergiesAndAdverseReactions that = (emrsystem.proxies.AllergiesAndAdverseReactions) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EMRSystem.AllergiesAndAdverseReactions";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
