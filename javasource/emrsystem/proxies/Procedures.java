// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emrsystem.proxies;

public class Procedures
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject proceduresMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EMRSystem.Procedures";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PatientIC("PatientIC"),
		ProcedureID("ProcedureID"),
		ProcedureType("ProcedureType"),
		ProcedureDate("ProcedureDate"),
		ConductHCPName("ConductHCPName"),
		PlaceToConduct("PlaceToConduct"),
		ProcessOnGoing("ProcessOnGoing"),
		Procedures_Patient("EMRSystem.Procedures_Patient"),
		Examination_Procedures("EMRSystem.Examination_Procedures");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Procedures(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EMRSystem.Procedures"));
	}

	protected Procedures(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject proceduresMendixObject)
	{
		if (proceduresMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EMRSystem.Procedures", proceduresMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EMRSystem.Procedures");

		this.proceduresMendixObject = proceduresMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Procedures.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static emrsystem.proxies.Procedures initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emrsystem.proxies.Procedures.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emrsystem.proxies.Procedures initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emrsystem.proxies.Procedures(context, mendixObject);
	}

	public static emrsystem.proxies.Procedures load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emrsystem.proxies.Procedures.initialize(context, mendixObject);
	}

	public static java.util.List<emrsystem.proxies.Procedures> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<emrsystem.proxies.Procedures> result = new java.util.ArrayList<emrsystem.proxies.Procedures>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EMRSystem.Procedures" + xpathConstraint))
			result.add(emrsystem.proxies.Procedures.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC()
	{
		return getPatientIC(getContext());
	}

	/**
	 * @param context
	 * @return value of PatientIC
	 */
	public final java.lang.String getPatientIC(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PatientIC.toString());
	}

	/**
	 * Set value of PatientIC
	 * @param patientic
	 */
	public final void setPatientIC(java.lang.String patientic)
	{
		setPatientIC(getContext(), patientic);
	}

	/**
	 * Set value of PatientIC
	 * @param context
	 * @param patientic
	 */
	public final void setPatientIC(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String patientic)
	{
		getMendixObject().setValue(context, MemberNames.PatientIC.toString(), patientic);
	}

	/**
	 * @return value of ProcedureID
	 */
	public final java.lang.String getProcedureID()
	{
		return getProcedureID(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcedureID
	 */
	public final java.lang.String getProcedureID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ProcedureID.toString());
	}

	/**
	 * Set value of ProcedureID
	 * @param procedureid
	 */
	public final void setProcedureID(java.lang.String procedureid)
	{
		setProcedureID(getContext(), procedureid);
	}

	/**
	 * Set value of ProcedureID
	 * @param context
	 * @param procedureid
	 */
	public final void setProcedureID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String procedureid)
	{
		getMendixObject().setValue(context, MemberNames.ProcedureID.toString(), procedureid);
	}

	/**
	 * @return value of ProcedureType
	 */
	public final java.lang.String getProcedureType()
	{
		return getProcedureType(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcedureType
	 */
	public final java.lang.String getProcedureType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ProcedureType.toString());
	}

	/**
	 * Set value of ProcedureType
	 * @param proceduretype
	 */
	public final void setProcedureType(java.lang.String proceduretype)
	{
		setProcedureType(getContext(), proceduretype);
	}

	/**
	 * Set value of ProcedureType
	 * @param context
	 * @param proceduretype
	 */
	public final void setProcedureType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String proceduretype)
	{
		getMendixObject().setValue(context, MemberNames.ProcedureType.toString(), proceduretype);
	}

	/**
	 * @return value of ProcedureDate
	 */
	public final java.util.Date getProcedureDate()
	{
		return getProcedureDate(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcedureDate
	 */
	public final java.util.Date getProcedureDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.ProcedureDate.toString());
	}

	/**
	 * Set value of ProcedureDate
	 * @param proceduredate
	 */
	public final void setProcedureDate(java.util.Date proceduredate)
	{
		setProcedureDate(getContext(), proceduredate);
	}

	/**
	 * Set value of ProcedureDate
	 * @param context
	 * @param proceduredate
	 */
	public final void setProcedureDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date proceduredate)
	{
		getMendixObject().setValue(context, MemberNames.ProcedureDate.toString(), proceduredate);
	}

	/**
	 * @return value of ConductHCPName
	 */
	public final java.lang.String getConductHCPName()
	{
		return getConductHCPName(getContext());
	}

	/**
	 * @param context
	 * @return value of ConductHCPName
	 */
	public final java.lang.String getConductHCPName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ConductHCPName.toString());
	}

	/**
	 * Set value of ConductHCPName
	 * @param conducthcpname
	 */
	public final void setConductHCPName(java.lang.String conducthcpname)
	{
		setConductHCPName(getContext(), conducthcpname);
	}

	/**
	 * Set value of ConductHCPName
	 * @param context
	 * @param conducthcpname
	 */
	public final void setConductHCPName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String conducthcpname)
	{
		getMendixObject().setValue(context, MemberNames.ConductHCPName.toString(), conducthcpname);
	}

	/**
	 * @return value of PlaceToConduct
	 */
	public final java.lang.String getPlaceToConduct()
	{
		return getPlaceToConduct(getContext());
	}

	/**
	 * @param context
	 * @return value of PlaceToConduct
	 */
	public final java.lang.String getPlaceToConduct(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PlaceToConduct.toString());
	}

	/**
	 * Set value of PlaceToConduct
	 * @param placetoconduct
	 */
	public final void setPlaceToConduct(java.lang.String placetoconduct)
	{
		setPlaceToConduct(getContext(), placetoconduct);
	}

	/**
	 * Set value of PlaceToConduct
	 * @param context
	 * @param placetoconduct
	 */
	public final void setPlaceToConduct(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String placetoconduct)
	{
		getMendixObject().setValue(context, MemberNames.PlaceToConduct.toString(), placetoconduct);
	}

	/**
	 * @return value of ProcessOnGoing
	 */
	public final java.lang.Boolean getProcessOnGoing()
	{
		return getProcessOnGoing(getContext());
	}

	/**
	 * @param context
	 * @return value of ProcessOnGoing
	 */
	public final java.lang.Boolean getProcessOnGoing(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ProcessOnGoing.toString());
	}

	/**
	 * Set value of ProcessOnGoing
	 * @param processongoing
	 */
	public final void setProcessOnGoing(java.lang.Boolean processongoing)
	{
		setProcessOnGoing(getContext(), processongoing);
	}

	/**
	 * Set value of ProcessOnGoing
	 * @param context
	 * @param processongoing
	 */
	public final void setProcessOnGoing(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean processongoing)
	{
		getMendixObject().setValue(context, MemberNames.ProcessOnGoing.toString(), processongoing);
	}

	/**
	 * @return value of Procedures_Patient
	 */
	public final emrsystem.proxies.PatientDetails getProcedures_Patient() throws com.mendix.core.CoreException
	{
		return getProcedures_Patient(getContext());
	}

	/**
	 * @param context
	 * @return value of Procedures_Patient
	 */
	public final emrsystem.proxies.PatientDetails getProcedures_Patient(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.PatientDetails result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Procedures_Patient.toString());
		if (identifier != null)
			result = emrsystem.proxies.PatientDetails.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Procedures_Patient
	 * @param procedures_patient
	 */
	public final void setProcedures_Patient(emrsystem.proxies.PatientDetails procedures_patient)
	{
		setProcedures_Patient(getContext(), procedures_patient);
	}

	/**
	 * Set value of Procedures_Patient
	 * @param context
	 * @param procedures_patient
	 */
	public final void setProcedures_Patient(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.PatientDetails procedures_patient)
	{
		if (procedures_patient == null)
			getMendixObject().setValue(context, MemberNames.Procedures_Patient.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Procedures_Patient.toString(), procedures_patient.getMendixObject().getId());
	}

	/**
	 * @return value of Examination_Procedures
	 */
	public final emrsystem.proxies.Examination getExamination_Procedures() throws com.mendix.core.CoreException
	{
		return getExamination_Procedures(getContext());
	}

	/**
	 * @param context
	 * @return value of Examination_Procedures
	 */
	public final emrsystem.proxies.Examination getExamination_Procedures(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		emrsystem.proxies.Examination result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Examination_Procedures.toString());
		if (identifier != null)
			result = emrsystem.proxies.Examination.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Examination_Procedures
	 * @param examination_procedures
	 */
	public final void setExamination_Procedures(emrsystem.proxies.Examination examination_procedures)
	{
		setExamination_Procedures(getContext(), examination_procedures);
	}

	/**
	 * Set value of Examination_Procedures
	 * @param context
	 * @param examination_procedures
	 */
	public final void setExamination_Procedures(com.mendix.systemwideinterfaces.core.IContext context, emrsystem.proxies.Examination examination_procedures)
	{
		if (examination_procedures == null)
			getMendixObject().setValue(context, MemberNames.Examination_Procedures.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Examination_Procedures.toString(), examination_procedures.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return proceduresMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emrsystem.proxies.Procedures that = (emrsystem.proxies.Procedures) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EMRSystem.Procedures";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
